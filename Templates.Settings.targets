<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildThisFileDirectory)\Templates.BranchSettings.targets" />
    <Import Project="$(MSBuildThisFileDirectory)\tools\Common.tasks" />
    <PropertyGroup>
        <!-- If you build the project from the command prompt, use the TemplatesVSVersion environment variable. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(TemplatesVSVersion)</TemplatesTargetVersion>

        <!-- If you open VS directly from the Windows shell, use the VS version as the target version. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(VisualStudioVersion)</TemplatesTargetVersion>

        <!-- Usually these are environment variables, but they aren't set when running VS -->
        <TemplatesRoot Condition=" '$(TemplatesRoot)' == '' ">$(MSBuildThisFileDirectory)</TemplatesRoot>
        <TemplatesBin Condition=" '$(TemplatesBin)' == '' ">$(TemplatesRoot)artifacts\build</TemplatesBin>
        <TemplatesIntermediate Condition=" '$(TemplatesIntermediate)' == '' ">$(TemplatesRoot)intermediate</TemplatesIntermediate>
        <TemplatesSource Condition=" '$(TemplatesSource)' == '' ">$(TemplatesRoot)src</TemplatesSource>
        <TemplatesTest Condition=" '$(TemplatesTest)' == '' ">$(TemplatesRoot)test</TemplatesTest>
        <TemplatesTools Condition=" '$(TemplatesTools)' == '' ">$(TemplatesRoot)tools</TemplatesTools>
        <TemplatesSetup Condition=" '$(TemplatesSetup)' == '' ">$(TemplatesRoot)setup</TemplatesSetup>
        <TemplatesTestResults Condition=" '$(TemplatesTestResults)' == '' ">$(TemplatesRoot)TestResults</TemplatesTestResults>
    </PropertyGroup>
    
    <PropertyGroup>
        <IsOfficialBuild Condition="'$(IsOfficialBuild)' == ''">false</IsOfficialBuild>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">$(BUILD_NUMBER)</TemplateVersion>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">Local</TemplateVersion>
        <TemplateDropPath Condition="'$(DROP_SHARE)' != '' and '$(BUILD_NUMBER)' != ''">$(DROP_SHARE)\$(BUILD_NUMBER)</TemplateDropPath>
        <TemplateDropPath Condition="'$(TemplateDropPath)' == ''">$(MSBuildThisFileDirectory)</TemplateDropPath>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'release'">$(ReleasePackageType)</PackageType>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'dev'">$(DevPackageType)</PackageType>
        <SignedPackageSubPath>artifacts\Signed</SignedPackageSubPath>
        <ExternalPackageSubPath>artifacts\coherence\ext</ExternalPackageSubPath>
        <CoherenceDropFile>$(TemplatesBin)\Packages.source.txt</CoherenceDropFile>
        <SemaphoreDropFile>$(TemplatesBin)\templates.sem</SemaphoreDropFile>
        <RunTemplateUnitTests Condition="'$(RunTemplateUnitTests)' == ''">true</RunTemplateUnitTests>
        <SkipCopyPackages Condition="'$(SkipCopyPackages)' == ''">true</SkipCopyPackages>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(TemplatesTargetVersion)' == '15.0' ">
        <!-- Visual Studio 15 properties -->
        <TemplatesTargetVersionPath>\dev15</TemplatesTargetVersionPath>
        <VersionedReferencePath>Dev15</VersionedReferencePath>
        <TargetVsVersion>VS15</TargetVsVersion>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationInsightsPackageVersion Condition="'$(ApplicationInsightsPackageVersion)' == ''">2.0.0</ApplicationInsightsPackageVersion>
        <BrowserLinkPackageVersion Condition="'$(BrowserLinkPackageVersion)' == ''">1.0.1</BrowserLinkPackageVersion>
        <DefaultNugetFeedSource Condition="'$(NugetFeedSource)' == ''">api.nuget.org=https://api.nuget.org/v3/index.json</DefaultNugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'release' and '$(ReleaseNugetFeedSource)' != ''">$(ReleaseNugetFeedSource)|$(DefaultNugetFeedSource)</NugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'dev' and '$(DevNugetFeedSource)' != ''">$(DevNugetFeedSource)|$(DefaultNugetFeedSource)</NugetFeedSource>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Output -->
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputPath>$(TemplatesBin)</OutputPath>
        <IntermediateOutputPath>$(TemplatesIntermediate)</IntermediateOutputPath>
        <BaseIntermediateOutputPath>$(TemplatesIntermediate)</BaseIntermediateOutputPath>
    </PropertyGroup>

    <Target Name="DeterminePackageVersions" DependsOnTargets="SetupPackageSource">
        <ItemGroup Condition="'$(CoherencePackageSources)' != ''">
            <WebSdkFile Include="$(WebSdkPackageSource)\Microsoft.NET.Sdk.Web.*.nupkg"
                        Exclude="$(WebSdkPackageSource)\Microsoft.NET.Sdk.Web.*.symbols.nupkg"/>
            <NetStandardFile Include="$(PackageSourceExternal)\NETStandard.Library.*.nupkg"/>
            <ToolsFile Include="$(ToolsPackageSource)\Microsoft.VisualStudio.Web.CodeGeneration.Tools.*.nupkg"/>
            <AspNetCorePatchFile Include="$(CoherencePatchDropPath)\Microsoft.AspNetCore.1.0.*.nupkg"/>
            <AspNetCoreMvcPatchFile Include="$(CoherencePatchDropPath)\Microsoft.AspNetCore.Mvc.Abstractions.*.nupkg"/>
            <AspNetCoreReleaseFile Include="$(PackageSource)\Microsoft.AspNetCore.Diagnostics.*.nupkg"/>
        </ItemGroup>

        <GetFileSemanticVersion Condition="'%(WebSdkFile.Identity)' != '' " Filename="%(WebSdkFile.Filename)">
            <Output PropertyName="WebSdkSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <GetFileSemanticVersion Condition="'%(NetStandardFile.Identity)' != '' " Filename="%(NetStandardFile.Filename)">
            <Output PropertyName="NetStandardSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <GetFileSemanticVersion Condition="'%(ToolsFile.Identity)' != '' " Filename="%(ToolsFile.Filename)">
            <Output PropertyName="ToolsSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <GetFileSemanticVersion Condition="'%(AspNetCorePatchFile.Identity)' != '' " Filename="%(AspNetCorePatchFile.Filename)">
            <Output PropertyName="AspNetCorePatchSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <GetFileSemanticVersion Condition="'%(AspNetCoreMvcPatchFile.Identity)' != '' " Filename="%(AspNetCoreMvcPatchFile.Filename)">
            <Output PropertyName="AspNetCoreMvcPatchSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <GetFileSemanticVersion Condition="'%(AspNetCoreReleaseFile.Identity)' != '' " Filename="%(AspNetCoreReleaseFile.Filename)">
            <Output PropertyName="AspNetCoreReleaseSemanticVersion" TaskParameter="SemanticVersion"/>
        </GetFileSemanticVersion>

        <PropertyGroup>
            <!-- The below is a fallback version for external non CI builds -->
            <NetCoreSemanticVersion Condition="'$(PackageSourceExternal)' == ''"></NetCoreSemanticVersion>
            <NetCore10PlatformVersion Condition="'$(NetCore10PlatformVersion)' == ''">1.0.3$(NetCoreSemanticVersion)</NetCore10PlatformVersion>
            <NetCore11PlatformVersion Condition="'$(NetCore11PlatformVersion)' == ''">1.1.0</NetCore11PlatformVersion>

            <WebSdkSemanticVersion Condition="'$(PackageSourceExternal)' == ''">-*</WebSdkSemanticVersion>
            <WebSdkVersion Condition="'$(WebSdkVersion)' == ''">1.0.0$(WebSdkSemanticVersion)</WebSdkVersion>

            <NetStandardVersion Condition="'$(NetStandardVersion)' == ''">1.6</NetStandardVersion>
            <NetStandardSemanticVersion Condition="'$(PackageSourceExternal)' == ''">-*</NetStandardSemanticVersion>
            <NetStandardPlatformVersion Condition="'$(NetStandardPlatformVersion)' == ''">$(NetStandardVersion).0$(NetStandardSemanticVersion)</NetStandardPlatformVersion>

            <ToolsSemanticVersion Condition="'$(PackageSource)' == ''">-*</ToolsSemanticVersion>
            <Tools10PackageVersion Condition="'$(Tools10PackageVersion)' == ''">1.0.0$(ToolsSemanticVersion)</Tools10PackageVersion >
            <Tools11PackageVersion Condition="'$(Tools11PackageVersion)' == ''">1.1.0$(ToolsSemanticVersion)</Tools11PackageVersion>

            <AspNetCorePatchSemanticVersion Condition="'$(PackageSource)' == ''"></AspNetCorePatchSemanticVersion>
            <AspNetCorePatchPackageVersion Condition="'$(AspNetCorePatchPackageVersion)' == ''">1.0.1$(AspNetCorePatchSemanticVersion)</AspNetCorePatchPackageVersion>

            <AspNetCoreMvcPatchSemanticVersion Condition="'$(PackageSource)' == ''"></AspNetCoreMvcPatchSemanticVersion>
            <AspNetCoreMvcPatchPackageVersion Condition="'$(AspNetCoreMvcPatchPackageVersion)' == ''">1.0.2$(AspNetCoreMvcPatchSemanticVersion)</AspNetCoreMvcPatchPackageVersion>
            <Mvc11PackageVersion Condition="'$(Mvc11PackageVersion)' == ''">1.1.1</Mvc11PackageVersion>

            <AspNetCoreReleaseSemanticVersion Condition="'$(PackageSource)' == ''"></AspNetCoreReleaseSemanticVersion>
            <AspNetCoreReleasePackageVersion Condition="'$(AspNetCoreReleasePackageVersion)' == ''">1.0.0$(AspNetCoreReleaseSemanticVersion)</AspNetCoreReleasePackageVersion>
        </PropertyGroup>

        <Message Text="NetCorePlatformVersion: $(NetCorePlatformVersion)"/>
        <Message Text="WebSdkVersion: $(WebSdkVersion)"/>
        <Message Text="NetStandardPlatformVersion: $(NetStandardPlatformVersion)"/>
        <Message Text="AspNetCorePatchPackageVersion: $(AspNetCorePatchPackageVersion)"/>
        <Message Text="AspNetCoreMvcPackageVersion: $(AspNetCoreMvcPatchPackageVersion)"/>
        <Message Text="AspNetCoreReleasePackageVersion: $(AspNetCoreReleasePackageVersion)"/>
        <Message Text="Tools10PackageVersion: $(Tools10PackageVersion)"/>

        <Message Text="NetCore11PlatformVersion: $(NetCore11PlatformVersion)"/>
        <Message Text="Mvc11PackageVersion: $(Mvc11PackageVersion)"/>
        <Message Text="Tools11PackageVersion: $(Tools11PackageVersion)"/>
    </Target>
    
    <Target Name="SetupPackageSource">
        <FindLatestDrop RootPath="$(CacheDropFolder)" SubFolder="Signed" Condition="'$(CacheDropPath)' == '' and '$(CacheDropFolder)' != ''">
            <Output PropertyName="CacheDropSigned" TaskParameter="LatestSubFolderPath"/>
            <Output PropertyName="CacheDropPath" TaskParameter="LatestRootPath"/>
        </FindLatestDrop>

        <GetPropertyFromSemaphore SemaphorePath="$(CacheDropPath)\aspnetcorelocalfeed.sem" PropertyName="CoherenceDropPath">
            <Output PropertyName="CoherenceDropPath" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore>

        <GetPropertyFromSemaphore SemaphorePath="$(CacheDropPath)\aspnetcorelocalfeed.sem" PropertyName="CoherencePatchDropPath">
            <Output PropertyName="CoherencePatchDropPath" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore>

        <GetPropertyFromSemaphore SemaphorePath="$(CacheDropPath)\aspnetcorelocalfeed.sem" PropertyName="WebSdkDropPath" Condition="'$(WebSdkDropPath)' == ''">
            <Output PropertyName="WebSdkDropPath" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore>

        <GetPropertyFromSemaphore SemaphorePath="$(CacheDropPath)\aspnetcorelocalfeed.sem" PropertyName="Version">
            <Output PropertyName="CacheVersion" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore>

        <GetPropertyFromSemaphore SemaphorePath="$(CacheDropPath)\aspnetcorelocalfeed.sem" PropertyName="CoherenceCodeGenerationPatchDropPath">
            <Output PropertyName="CoherenceCodeGenerationPatchDropPath" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore>

        <PropertyGroup>
            <PackageSource Condition="'$(CoherenceDropPath)' != ''">$(CoherenceDropPath)\$(SignedPackageSubPath)\$(PackageType)</PackageSource>
            <PackageSourceExternal Condition="'$(CoherenceDropPath)' != ''">$(CoherenceDropPath)\$(ExternalPackageSubPath)</PackageSourceExternal>
            <RemotePackageSource Condition="'$(TemplateBuildBranch)' == 'dev'">https://www.myget.org/F/aspnetvnext/api/v3/index.json</RemotePackageSource>
            <RemotePackageSource Condition="'$(TemplateBuildBranch)' == 'release'">https://www.myget.org/F/aspnetrelease/api/v3/index.json</RemotePackageSource>
            <CoherencePackageSources>$(TemplatesIntermediate)\CoherencePackages</CoherencePackageSources>
            <WebSdkPackageSource Condition="'$(WebSdkDropPath)' != ''">$(WebSdkDropPath)\Signed</WebSdkPackageSource>
            <ToolsPackageSource Condition="'$(CoherenceCodeGenerationPatchDropPath)' != ''">$(CoherenceCodeGenerationPatchDropPath)</ToolsPackageSource>
        </PropertyGroup>

        <GetPropertyFromSemaphore SemaphorePath="$(WebSdkDropPath)\web-sdk.sem" PropertyName="CoreSdkDropPath" Condition="'$(CoreSdkDropPath)' == ''">
            <Output PropertyName="CoreSdkDropPath" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore >

        <GetPropertyFromSemaphore SemaphorePath="$(WebSdkDropPath)\web-sdk.sem" PropertyName="CoreSdkVersion" Condition="'$(CoreSdkVersion)' == ''">
            <Output PropertyName="CoreSdkVersion" TaskParameter="PropertyValue"/>
        </GetPropertyFromSemaphore >

        <!-- Feeds related to Coherence-Signed depends on the remote stores -->
        <ItemGroup>
            <PackageSourceForRestore Include="$(CoherencePackageSources)" Condition="'$(PackageSource)' != ''"/>
            <PackageSourceForRestore Include="$(WebSdkPackageSource)" Condition="'$(WebSdkPackageSource)' != ''"/>
            <PackageSourceForRestore Include="$(ToolsPackageSource)" Condition="'$(ToolsPackageSource)' != ''"/>
            <PackageSourceForRestore Include="$(AdditionalPackageSourceForRestore)" Condition="'$(AdditionalPackageSourceForRestore)' != ''"/>
            <PackageSourceForRestore Include="https://api.nuget.org/v3/index.json"/>
        </ItemGroup>

        <PropertyGroup>
            <_PackageSourceForRestore >@(PackageSourceForRestore->'-s %(Identity)')</_PackageSourceForRestore >
            <PackageSourceForRestore >$(_PackageSourceForRestore.Replace(';', ' '))</PackageSourceForRestore >
            <PackageSourceForRestore >$(PackageSourceForRestore) -f $(RemotePackageSource)</PackageSourceForRestore >
        </PropertyGroup>

        <Message Text="CacheDropPath: $(CacheDropPath)"/>
        <Message Text="PackageSource: $(PackageSource)"/>
        <Message Text="PackageSourceExternal: $(PackageSourceExternal)"/>
        <Message Text="CoherencePackageSources: $(CoherencePackageSources)"/>
        <Message Text="WebSdkPackageSource: $(WebSdkPackageSource)"/>
        <Message Text="ToolsPackageSource: $(ToolsPackageSource)"/>
        <Message Text="CoreSdkDropPath: $(CoreSdkDropPath)"/>
        <Message Text="PackageSourceFoRestore: $(PackageSourceForRestore)"/>
    </Target>

    <Target Name="CopyPackagesForBuild" DependsOnTargets="SetupPackageSource" Condition="'$(CoherenceDropPath)' != '' and '$(SkipCopyPackages)' == 'false'">
        <RemoveDir Directories="$(CoherencePackageSources)" />
        <MakeDir Directories="$(CoherencePackageSources)" />
        
        <!-- Copy Coherence packages locally to speed up restore -->
        <ItemGroup>
            <CoherencePackages Include="$(PackageSource)\*.*-preview2-final.nupkg;
                                        $(PackageSourceExternal)\*.nupkg;
                                        $(WebSdkPackageSource)\*.nupkg;
                                        $(ToolsPackageSource)\*.nupkg"
                               Exclude="$(WebSdkPackageSource)\*.symbols.nupkg"/>
            <CoherencePackages Include="$(CoherencePatchDropPath)\*.nupkg" 
                               Exclude="$(CoherencePatchDropPath)\*.*-preview2-update1.nupkg" />
        </ItemGroup>

        <Copy SourceFiles="@(CoherencePackages)" DestinationFolder="$(IntermediateOutputPath)\CoherencePackages" SkipUnchangedFiles="true" />
    </Target>
</Project>
