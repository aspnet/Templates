<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory),Templates.msbuild))\Templates.Settings.targets" />
  <PropertyGroup>
    <ProjectGuid>{c14a0c12-e46e-4f5b-b034-3038d0fc1010}</ProjectGuid>
    <ZipCommand>$(TemplatesTools)\7za.exe a -r</ZipCommand>
    <UnZipCommand>$(TemplatesTools)\7za.exe x</UnZipCommand>
    <ConsoleAppTemplateName>ConsoleApp</ConsoleAppTemplateName>
    <ClassLibraryTemplateName>ClassLibrary</ClassLibraryTemplateName>
    <EmptyWebTemplateName>EmptyWeb</EmptyWebTemplateName>
    <Rules>Rules</Rules>
    <StarterWebTemplateName>StarterWeb</StarterWebTemplateName>
    <WebAPITemplateName>WebAPI</WebAPITemplateName>
    <IntermediateOutputPath>$(IntermediateOutputPath)\ProjectTemplates\</IntermediateOutputPath>
    <TemplatesOutputPath>$(OutputPath)\ProjectTemplates\</TemplatesOutputPath>
    <UpdateJsonCommand>$(MSBuildThisFileDirectory)\..\updateJson.cmd</UpdateJsonCommand>
    <ResourcesPath>..\Resources\</ResourcesPath>
  </PropertyGroup>
  <UsingTask TaskName="Microsoft.Web.MsBuildTasks.GetVSTemplateItems" AssemblyFile="$(TemplatesTools)\Microsoft.Web.MsBuildTasks2.dll" />
  <UsingTask TaskName="Microsoft.Web.MsBuildTasks.RegexReplace" AssemblyFile="$(TemplatesTools)\Microsoft.Web.MsBuildTasks.dll"  />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' " />
  
  <ItemDefinitionGroup>
    <VSTemplate>
      <TargetName/>
      <SearchPath/>
    </VSTemplate>
  </ItemDefinitionGroup>
  
  <!--This item group contains templates which are to be built-->
  <ItemGroup>
    <VSTemplate Include="ClassLibrary.vstemplate">
      <TargetName>$(ClassLibraryTemplateName)</TargetName>
      <SearchPath>ClassLibrary\;$(ResourcesPath)</SearchPath>
    </VSTemplate>
    <VSTemplate Include="KClassLibrary.vstemplate">
      <TargetName>KClassLibrary</TargetName>
      <SearchPath>$(ResourcesPath)</SearchPath>
    </VSTemplate>
    <VSTemplate Include="ConsoleApp.vstemplate">
      <TargetName>$(ConsoleAppTemplateName)</TargetName>
      <SearchPath>ConsoleApp\;$(ResourcesPath)</SearchPath>
    </VSTemplate>
    <VSTemplate Include="KConsoleApp.vstemplate">
      <TargetName>KConsoleApp</TargetName>
      <SearchPath>$(ResourcesPath)</SearchPath>
    </VSTemplate>      
    <VSTemplate Include="EmptyWeb.vstemplate">
      <TargetName>$(EmptyWebTemplateName)</TargetName>
      <SearchPath>EmptyWeb\;$(ResourcesPath)</SearchPath>
    </VSTemplate>    
    <VSTemplate Include="StarterWeb.vstemplate">
      <TargetName>$(StarterWebTemplateName)</TargetName>
      <SearchPath>StarterWeb\;$(ResourcesPath)</SearchPath>
    </VSTemplate>
    <VSTemplate Include="WebAPI.vstemplate">
      <TargetName>$(WebAPITemplateName)</TargetName>
      <SearchPath>WebAPI\;$(ResourcesPath)</SearchPath>
    </VSTemplate>
  </ItemGroup>
  
  <Target Name="BuildAllTemplates" DependsOnTargets="GetTemplateItemsFromVSTemplates" Inputs="@(VSTemplateItem)" Outputs="$(TemplatesOutputPath)%(TargetName).zip">
    <PropertyGroup>
      <TargetName>%(VSTemplateItem.TargetName)</TargetName>
      <TempPath>$(IntermediateOutputPath)$(TargetName)\</TempPath>
    </PropertyGroup>
    <RemoveDir Directories="$(TempPath)" />
    
    <Copy SourceFiles="@(VSTemplateItem)" DestinationFiles="@(VSTemplateItem->'$(TempPath)%(TemplateRelativeFilePath)')" Condition="'%(Extension)' != '.vstemplate'">
      <Output ItemName="CopiedVsTemplateFiles" TaskParameter="CopiedFiles"/>
    </Copy>
    
    <Copy SourceFiles="@(VSTemplateItem)" DestinationFiles="@(VSTemplateItem->'$(TempPath)%(Filename)%(Extension)')" Condition="'%(Extension)' == '.vstemplate'">
      <Output ItemName="CopiedVsTemplateFiles" TaskParameter="CopiedFiles"/>
    </Copy>
    
    <ItemGroup>
      <FilesToReplace Remove="@(FilesToReplace)" />
      <FilesToReplace Include="@(CopiedVsTemplateFiles)" />
    </ItemGroup>

    <RegexReplace Files="@(FilesToReplace)" Find="__VSVER__" Condition="('%(Extension)' == '.vstemplate')" Replace="$(TemplatesTargetVersion)" />

    <RegexReplace Files="@(FilesToReplace)" Find="__BrowserLinkPackageVersion__" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(TemplatesTargetVersion).0-beta3" />
    <RegexReplace Files="@(FilesToReplace)" Find="__VSVER__" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(TemplatesTargetVersion)" />

    <Message Text="Running $(UpdateJsonCommand) on $(TempPath)"/>
    <Exec WorkingDirectory="$(TempPath)" Command="$(UpdateJsonCommand) &quot;$(PackageSource)&quot;" />  
    
    <Exec WorkingDirectory="$(TempPath)" Command="$(ZipCommand) $(TemplatesOutputPath)$(TargetName).zip * &gt; nul" />
    <Message Text="$(TargetName).zip" Importance="high" />
  </Target>

  <Target Name="GetTemplateItemsFromVSTemplates" Condition="'@(VSTemplate)'!=''">    
    <GetVSTemplateItems Templates="@(VSTemplate)">
      <Output TaskParameter="TemplateItems" ItemName="VSTemplateItem" />
    </GetVSTemplateItems>
  </Target>
  
  <Target Name="BuildCompiled">
    <MakeDir Directories="$(TemplatesOutputPath)" />
    <CallTarget Targets="BuildAllTemplates" />
  </Target>
  <Target Name="Clean">
    <RemoveDir Directories="$(TemplatesOutputPath);$(IntermediateOutputPath)" />
  </Target>
  
  <Target Name="Build" DependsOnTargets="BuildCompiled" />
  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />
</Project>