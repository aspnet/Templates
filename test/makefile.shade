use assembly="System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
use namespace="System"
use namespace="System.IO"
use import="Files"
use import="BuildEnv"
use import="Environment"

default BASE_DIR='${Directory.GetCurrentDirectory()}\..'
default TARGET_DIR='${Path.Combine(BASE_DIR, "artifacts")}'
default BUILD_DIR='${Path.Combine(TARGET_DIR, "build")}'
default TEST_DIR='${Path.Combine(TARGET_DIR, "test")}'
default TEMPLATE_DIR='${Path.Combine(BUILD_DIR, "test")}'
default Configuration='${E("Configuration")}'

var VERSION='0.1' 
var FULL_VERSION='0.1' 
var AUTHORS='Microsoft Open Technologies, Inc.' 

use-standard-lifecycle

#repo-initialize target='initialize'
default restore_options='${E("NUGET3_restore_options")}'
default package_source='${E("PackageSource")}'
default testFolder='test'

-//exec program='cmd' commandline='/C dnu restore${restore_options} -f ${package_source} -f https://www.nuget.org/api/v2/' if='!IsMono' workingdir='${testFolder}'
exec program='dnu' commandline='restore${restore_options} -f ${package_source} -f https://www.nuget.org/api/v2/' if='IsMono' workingdir='${testFolder}'

#xunit-test target='test'
k-test each='var projectFile in Files.Include("test/**/project.json")'

functions @{
    string E(string key) { return Environment.GetEnvironmentVariable(key); }
    void E(string key, string value) { Environment.SetEnvironmentVariable(key, value); }
}
macro name='Dnx' command='string' dnxDir='string'
    k

macro name='Dnx' command='string' dnxDir='string' dnvmUse='string'
    k
